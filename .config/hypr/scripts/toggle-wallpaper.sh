#!/bin/bash

STATE_FILE="/tmp/wallpaper_state"
WALLPAPER_DIR="/home/teaguy21/Videos/LiveWallpaper"
WALLPAPER_PREFIX="live-wallpaper"
SOLID_COLOR="#000000"

# path for autogenerated solid PNG used when hyprpaper is available
SOLID_PNG="/tmp/.hypr_solid_wallpaper.png"

ensure_solid_png() {
    if [ -f "$SOLID_PNG" ]; then
        return 0
    fi
    # Create a 1x1 black PNG using printf (more portable than base64)
    printf '\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x01\x00\x00\x00\x01\x08\x02\x00\x00\x00\x90wS\xde\x00\x00\x00\tpHYs\x00\x00\x0b\x13\x00\x00\x0b\x13\x01\x00\x9a\x9c\x18\x00\x00\x00\x0cIDATx\x9cc\xf8\x00\x00\x00\x01\x00\x01\x00\x00\x00\x00\r\n\x1a\n\x00\x00\x00\x00IEND\xaeB`\x82' > "$SOLID_PNG"
    chmod 644 "$SOLID_PNG"
    return 0
}

if [ ! -f "$STATE_FILE" ]; then
    echo "solid" > "$STATE_FILE"
fi

CURRENT_STATE=$(cat "$STATE_FILE")

WALLPAPERS=($WALLPAPER_DIR/${WALLPAPER_PREFIX}*)
WALLPAPER_COUNT=${#WALLPAPERS[@]}

# helper: is file a video (simple ext check)
is_video() {
    case "${1,,}" in
        *.mp4|*.mkv|*.webm|*.mov) return 0 ;;
        *) return 1 ;;
    esac
}

# helper: set wallpaper preferring hyprpaper for images
set_wallpaper_image() {
    FILE="$1"
    if command -v hyprpaper >/dev/null 2>&1; then
        # hyprpaper manages multi-monitor placement itself
        hyprpaper --wallpaper "$FILE" >/dev/null 2>&1 &
    fi
}

# helper: set wallpaper video via mpvpaper if needed
set_wallpaper_video() {
    FILE="$1"
    if command -v mpvpaper >/dev/null 2>&1; then
        # try to set on all common outputs; hyprpaper doesn't support video wallpapers
        mpvpaper -o "no-audio loop video-scale=oversample panscan=1.0" eDP-1 "$FILE" >/dev/null 2>&1 &
        mpvpaper -o "no-audio loop video-scale=oversample panscan=1.0" HDMI-A-1 "$FILE" >/dev/null 2>&1 &
    else
        # fallback: if no mpvpaper, try hyprpaper (images only) or skip
        set_wallpaper_image "$FILE"
    fi
}

if [ -z "$1" ] || [ "$1" != "--initial" ]; then
    if [ "$CURRENT_STATE" = "solid" ]; then
        # switching from solid -> animated: pick first wallpaper and set
        pkill hyprpaper 2>/dev/null || true
        if [ $WALLPAPER_COUNT -gt 0 ]; then
            FIRST="${WALLPAPERS[0]}"
            if is_video "$FIRST"; then
                set_wallpaper_video "$FIRST"
            else
                set_wallpaper_image "$FIRST"
            fi
            echo "animated:0" > "$STATE_FILE"
        fi
    elif [[ "$CURRENT_STATE" == animated:* ]]; then
        CURRENT_INDEX=${CURRENT_STATE#animated:}

        pkill mpvpaper 2>/dev/null || true
        pkill hyprpaper 2>/dev/null || true

        NEXT_INDEX=$((CURRENT_INDEX + 1))

        if [ $NEXT_INDEX -ge $WALLPAPER_COUNT ]; then
            # wrap to solid color
            pkill mpvpaper 2>/dev/null || true
            pkill hyprpaper 2>/dev/null || true
            if command -v hyprpaper >/dev/null 2>&1; then
                ensure_solid_png && hyprpaper --wallpaper "$SOLID_PNG" >/dev/null 2>&1 &
            fi
            echo "solid" > "$STATE_FILE"
        else
            NEXT_FILE="${WALLPAPERS[$NEXT_INDEX]}"
            if is_video "$NEXT_FILE"; then
                set_wallpaper_video "$NEXT_FILE"
            else
                set_wallpaper_image "$NEXT_FILE"
            fi
            echo "animated:$NEXT_INDEX" > "$STATE_FILE"
        fi
    fi
else
    # initial: stop any running wallpaper daemons and set solid color
    pkill mpvpaper 2>/dev/null || true
    pkill hyprpaper 2>/dev/null || true
    if command -v hyprpaper >/dev/null 2>&1; then
        ensure_solid_png && hyprpaper --wallpaper "$SOLID_PNG" >/dev/null 2>&1 &
    fi
    echo "solid" > "$STATE_FILE"
fi

# Properly exit the script
exit 0